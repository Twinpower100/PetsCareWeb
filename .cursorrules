руководствуемся ТЗ.txt и PetsCare_Описание_продукта.md
весь код должен быть выполнен на английском языке с условием мультиязычности. 
все комментарии должны быть на русском языке. 
все названия функций, переменных, классов должны быть на английском языке. 
каждый класс, функция должен иметь документацию и комментарии на русском языке.
бэкенд должен быть на django rest framework

# КРИТИЧЕСКИ ВАЖНО: ТРАНЗАКЦИИ И КОНКУРЕНТНЫЙ ДОСТУП
Все операции создания, изменения и удаления критических данных ОБЯЗАТЕЛЬНО должны быть защищены от гонки:

## ОБЯЗАТЕЛЬНЫЕ ТРЕБОВАНИЯ:
- Использовать @transaction.atomic для ВСЕХ операций CRUD с критическими данными
- Использовать select_for_update() для блокировки записей при редактировании
- Применять оптимистичное блокирование (поле version) для отслеживания изменений
- Обрабатывать исключения при конкурентном доступе
- Обеспечивать атомарность всех операций с данными

## КРИТИЧЕСКИЕ ОБЛАСТИ (требуют особой защиты):
- Бронирования и слоты (защита от двойного бронирования)
- Расписания и планирование (атомарность операций)
- Настройки и конфигурации (защита от гонки админов)
- Финансовые операции (платежи, счета)
- Управление пользователями и ролями
- Системные настройки и правила уведомлений

## ПАТТЕРНЫ ЗАЩИТЫ:
1. **Транзакционные блоки**: @transaction.atomic
2. **Блокировка записей**: select_for_update()
3. **Версионирование**: поле version для оптимистичного блокирования
4. **Уникальные ограничения**: unique_together в моделях
5. **Логирование**: отслеживание всех изменений
6. **Валидация**: проверка состояния перед операциями

# ЯЗЫК СООБЩЕНИЙ
- Все пользовательские сообщения (ошибки, уведомления, ответы API, любые строки, которые могут быть показаны пользователю через API, UI, логи ошибок, уведомления и т.д.) должны быть на английском языке и обязательно обернуты в функцию _() для мультиязычности.
- Пример правильно: raise ValidationError(_('Invalid date or time format'))
- Пример неправильно: raise ValidationError(_('Неверный формат даты или времени')) или raise ValidationError('Invalid date or time format')
- Все сообщения, предназначенные только для разработчиков (например, сообщения в логах, исключения для внутреннего использования), должны быть на английском языке и НЕ должны оборачиваться в _().
- Пример правильно (для разработчика): logger.error('Failed to connect to database')
- Пример неправильно (для разработчика): logger.error(_('Failed to connect to database'))
- Рекомендуется проверять отсутствие русских слов в пользовательских сообщениях через автоматические тесты или pre-commit хуки.

- В шаблонах необходимо использовать мультиязычность, например {{trans 'Hello, world!'}}
- Пример правильно: {{trans 'Hello, world!'}}
- Пример неправильно: {{trans 'Привет, мир!'}}
- Все шаблоны должны быть на английском языке.
- Все шаблоны должны быть обернуты в функцию _() для мультиязычности.
